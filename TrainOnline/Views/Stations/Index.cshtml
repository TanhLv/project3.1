@model IEnumerable<TrainOnline.Models.Station>

@{
    ViewData["Title"] = "Index";
}
@{
    var _filter = (string)ViewBag.Filter;

    var _sortStationName = (bool?)ViewBag.sortStationName;

    var _totalItem = (int)ViewBag.Total;
    var _index = (int)ViewBag.Index;
    var _size = (int)ViewBag.Size;

    var _totalPage = _totalItem / _size;
    if (_totalItem % _size > 0)
    {
        _totalPage++;
    }
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form class="row" asp-action="Index">
    <div class="col-md-6">
        <input type="text" class="form-control" name="filter" id="filter" value="@_filter" />
    </div>
    <div class="col-md-2">
        <button class="btn btn-success" type="submit"><i class="fa-solid fa-magnifying-glass"></i></button>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                <div style="display:flex">
                    <div>
                        StationName
                    </div>
                    <div>
                        <ul>
                            <li><a href="@Url.Action("Index","Stations", new { filter = _filter, sortStationName = true })"><i class="fa-solid fa-caret-up"></i></a></li>
                            <li><a href="@Url.Action("Index","Stations", new { filter = _filter, sortStationName = false })"><i class="fa-solid fa-caret-down"></i></a></li>
                        </ul>
                    </div>
                </div>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ModifiedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DeleteDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.StationName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ModifiedDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DeleteDate)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.StationId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.StationId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.StationId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

<nav aria-label="Page navigation example">
    <ul class="pagination">
        <li class="page-item"><a class="page-link" href="@Url.Action("Index","Stations", new { filter = _filter, sortStationName = _sortStationName, index = _index - 1 <=0 ? 1 : _index-1, size = _size })">Previous</a></li>
        @for (var i = 0; i < _totalPage; i++)
        {
            <li class="page-item"><a class="page-link" href="@Url.Action("Index","Stations", new { filter = _filter, sortStationName = _sortStationName, index = i+1, size = _size })">@(i + 1)</a></li>
        }

        <li class="page-item"><a class="page-link" href="@Url.Action("Index","Stations", new { filter = _filter, sortStationName = _sortStationName, index = _index + 1 > _totalPage ? _totalPage : _index+1, size = _size })">Next</a></li>
    </ul>
</nav>
